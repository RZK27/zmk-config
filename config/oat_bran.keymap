#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_c {
            bindings = <&kp C>;
            key-positions = <2 7>;
            layers = <0 3>;
        };

        combo_d {
            bindings = <&kp D>;
            key-positions = <3 6>;
            layers = <0 3>;
        };

        combo_u {
            bindings = <&kp U>;
            key-positions = <2 6>;
            layers = <0 3>;
        };

        combo_m {
            bindings = <&kp M>;
            key-positions = <3 7>;
            layers = <0 3>;
        };

        combo_g {
            bindings = <&kp G>;
            key-positions = <6 1>;
            layers = <0 3>;
        };

        combo_f {
            bindings = <&kp F>;
            key-positions = <8 3>;
            layers = <0 3>;
        };

        combo_p {
            bindings = <&kp P>;
            key-positions = <1 7>;
            layers = <0 3>;
        };

        combo_w {
            bindings = <&kp W>;
            key-positions = <2 8>;
            layers = <0 3>;
        };

        combo_y {
            bindings = <&kp Y>;
            key-positions = <2 3>;
            layers = <0 3>;
        };

        combo_b {
            bindings = <&kp B>;
            key-positions = <7 6>;
            layers = <0 3>;
        };

        combo_k {
            bindings = <&kp K>;
            key-positions = <1 2>;
            layers = <0 3>;
        };

        combo_j {
            bindings = <&kp J>;
            key-positions = <8 7>;
            layers = <0 3>;
        };

        combo_z {
            bindings = <&kp Z>;
            key-positions = <3 1>;
            layers = <0 3>;
        };

        combo_x {
            bindings = <&kp X>;
            key-positions = <8 6>;
            layers = <0 3>;
        };

        combo_q {
            bindings = <&kp Q>;
            key-positions = <2 3 6>;
            layers = <0 3>;
        };

        combo_v {
            bindings = <&kp V>;
            key-positions = <7 6 3>;
            layers = <0 3>;
        };

        combo_1 {
            bindings = <&kp NUMBER_1>;
            key-positions = <1 10>;
            layers = <0 3>;
        };

        combo_2 {
            bindings = <&kp NUMBER_2>;
            key-positions = <1 11>;
            layers = <0 3>;
        };

        combo_3 {
            bindings = <&kp NUMBER_3>;
            key-positions = <1 4>;
            layers = <0 3>;
        };

        combo_4 {
            bindings = <&kp NUMBER_4>;
            key-positions = <8 13>;
            layers = <0 3>;
        };

        combo_5 {
            bindings = <&kp NUMBER_5>;
            key-positions = <8 12>;
            layers = <0 3>;
        };

        combo_6 {
            bindings = <&kp NUMBER_6>;
            key-positions = <8 5>;
            layers = <0 3>;
        };

        combo_7 {
            bindings = <&kp NUMBER_7>;
            key-positions = <1 8 10 13>;
            layers = <0 3>;
        };

        combo_8 {
            bindings = <&kp NUMBER_8>;
            key-positions = <1 8 11 12>;
            layers = <0 3>;
        };

        combo_9 {
            bindings = <&kp NUMBER_9>;
            key-positions = <1 8 4 5>;
            layers = <0 3>;
        };

        combo_0 {
            bindings = <&kp NUMBER_0>;
            key-positions = <1 8>;
            layers = <0 3>;
        };

        combo_, {
            bindings = <&kp COMMA>;
            key-positions = <10 11>;
            layers = <0 3>;
        };

        combo_. {
            bindings = <&kp PERIOD>;
            key-positions = <12 13>;
            layers = <0 3>;
        };

        combo_slsh {
            bindings = <&kp SLASH>;
            key-positions = <12 8 13>;
            layers = <0 3>;
        };

        combo_scln {
            bindings = <&kp SEMICOLON>;
            key-positions = <12 7>;
            layers = <0 3>;
        };

        combo_quot {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <10 13>;
            layers = <0 3>;
        };

        combo_left_brack {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <10 3>;
            layers = <0 3>;
        };

        combo_right_brack {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <13 6>;
            layers = <0 3>;
        };

        combo_minus {
            bindings = <&kp MINUS>;
            key-positions = <12 11>;
            layers = <0 3>;
        };

        combo_eq {
            bindings = <&kp EQUAL>;
            key-positions = <4 5>;
            layers = <0 3>;
        };

        combo_grave {
            bindings = <&kp GRAVE>;
            key-positions = <2 11>;
            layers = <0 3>;
        };

        combo_bsls {
            bindings = <&kp BACKSLASH>;
            key-positions = <11 1 10>;
            layers = <0 3>;
        };

        combo_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2 3>;
            layers = <0 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mo 1  &kp O  &kp A  &kp T  &kp SPACE         &kp ENTER     &kp E         &kp I           &kp N  &to 2
              &kp H  &kp R                                                                &kp L  &kp S

                            &kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT
            >;
        };

        temp_nav_layer {
            bindings = <
&trans  &kp LEFT  &kp UP_ARROW    &kp RIGHT_ARROW  &kp LC(A)  &kp LC(Z)  &kp BSPC  &kp DEL  &kp LC(V)  &none
                  &kp DOWN_ARROW  &kp TAB                                                   &kp LC(X)  &kp LC(C)

                                                   &trans     &trans     &trans    &trans
            >;
        };

        nav_layer {
            bindings = <
&mo 3  &kp LEFT  &kp UP_ARROW    &kp RIGHT_ARROW  &kp ESC  &kp LC(Z)  &kp BSPC  &kp DEL  &kp LC(V)  &to 0
                 &kp DOWN_ARROW  &kp TAB                                                 &kp LC(X)  &kp LC(C)

                                                  &trans   &trans     &trans    &trans
            >;
        };

        temp_default_layer {
            bindings = <
&trans  &kp O  &kp A  &kp T  &kp SPACE         &kp ENTER     &kp E         &kp I           &kp N  &none
               &kp H  &kp R                                                                &kp L  &kp S

                             &kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT
            >;
        };
    };
};
